
package ws.gamesnetworksoap.server;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.FaultAction;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.6-1b01 
 * Generated source version: 2.2
 * 
 */
@WebService(name = "IGamesNetwork", targetNamespace = "http://Server.GamesNetworkSoap.ws/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface IGamesNetwork {


    /**
     * 
     * @param arg1
     * @param arg0
     * @return
     *     returns int
     * @throws InternalErrorException_Exception
     * @throws UnauthorizedException_Exception
     * @throws ConnectionException_Exception
     */
    @WebMethod(operationName = "CreateUser")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "CreateUser", targetNamespace = "http://Server.GamesNetworkSoap.ws/", className = "ws.gamesnetworksoap.server.CreateUser")
    @ResponseWrapper(localName = "CreateUserResponse", targetNamespace = "http://Server.GamesNetworkSoap.ws/", className = "ws.gamesnetworksoap.server.CreateUserResponse")
    @Action(input = "http://Server.GamesNetworkSoap.ws/IGamesNetwork/CreateUserRequest", output = "http://Server.GamesNetworkSoap.ws/IGamesNetwork/CreateUserResponse", fault = {
        @FaultAction(className = UnauthorizedException_Exception.class, value = "http://Server.GamesNetworkSoap.ws/IGamesNetwork/CreateUser/Fault/UnauthorizedException"),
        @FaultAction(className = InternalErrorException_Exception.class, value = "http://Server.GamesNetworkSoap.ws/IGamesNetwork/CreateUser/Fault/InternalErrorException"),
        @FaultAction(className = ConnectionException_Exception.class, value = "http://Server.GamesNetworkSoap.ws/IGamesNetwork/CreateUser/Fault/ConnectionException")
    })
    public int createUser(
        @WebParam(name = "arg0", targetNamespace = "")
        Usermodel arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        String arg1)
        throws ConnectionException_Exception, InternalErrorException_Exception, UnauthorizedException_Exception
    ;

    /**
     * 
     * @param arg1
     * @param arg0
     * @return
     *     returns int
     * @throws InternalErrorException_Exception
     * @throws ConnectionException_Exception
     * @throws UnauthorizedException_Exception
     */
    @WebMethod(operationName = "DeleteUser")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "DeleteUser", targetNamespace = "http://Server.GamesNetworkSoap.ws/", className = "ws.gamesnetworksoap.server.DeleteUser")
    @ResponseWrapper(localName = "DeleteUserResponse", targetNamespace = "http://Server.GamesNetworkSoap.ws/", className = "ws.gamesnetworksoap.server.DeleteUserResponse")
    @Action(input = "http://Server.GamesNetworkSoap.ws/IGamesNetwork/DeleteUserRequest", output = "http://Server.GamesNetworkSoap.ws/IGamesNetwork/DeleteUserResponse", fault = {
        @FaultAction(className = UnauthorizedException_Exception.class, value = "http://Server.GamesNetworkSoap.ws/IGamesNetwork/DeleteUser/Fault/UnauthorizedException"),
        @FaultAction(className = InternalErrorException_Exception.class, value = "http://Server.GamesNetworkSoap.ws/IGamesNetwork/DeleteUser/Fault/InternalErrorException"),
        @FaultAction(className = ConnectionException_Exception.class, value = "http://Server.GamesNetworkSoap.ws/IGamesNetwork/DeleteUser/Fault/ConnectionException")
    })
    public int deleteUser(
        @WebParam(name = "arg0", targetNamespace = "")
        Usermodel arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        String arg1)
        throws ConnectionException_Exception, InternalErrorException_Exception, UnauthorizedException_Exception
    ;

    /**
     * 
     * @param arg1
     * @param arg0
     * @return
     *     returns int
     * @throws InternalErrorException_Exception
     * @throws ConnectionException_Exception
     * @throws UnauthorizedException_Exception
     */
    @WebMethod(operationName = "UpdateUser")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "UpdateUser", targetNamespace = "http://Server.GamesNetworkSoap.ws/", className = "ws.gamesnetworksoap.server.UpdateUser")
    @ResponseWrapper(localName = "UpdateUserResponse", targetNamespace = "http://Server.GamesNetworkSoap.ws/", className = "ws.gamesnetworksoap.server.UpdateUserResponse")
    @Action(input = "http://Server.GamesNetworkSoap.ws/IGamesNetwork/UpdateUserRequest", output = "http://Server.GamesNetworkSoap.ws/IGamesNetwork/UpdateUserResponse", fault = {
        @FaultAction(className = UnauthorizedException_Exception.class, value = "http://Server.GamesNetworkSoap.ws/IGamesNetwork/UpdateUser/Fault/UnauthorizedException"),
        @FaultAction(className = InternalErrorException_Exception.class, value = "http://Server.GamesNetworkSoap.ws/IGamesNetwork/UpdateUser/Fault/InternalErrorException"),
        @FaultAction(className = ConnectionException_Exception.class, value = "http://Server.GamesNetworkSoap.ws/IGamesNetwork/UpdateUser/Fault/ConnectionException")
    })
    public int updateUser(
        @WebParam(name = "arg0", targetNamespace = "")
        Usermodel arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        String arg1)
        throws ConnectionException_Exception, InternalErrorException_Exception, UnauthorizedException_Exception
    ;

    /**
     * 
     * @param arg1
     * @param arg0
     * @return
     *     returns ws.gamesnetworksoap.server.Usermodel
     * @throws InternalErrorException_Exception
     * @throws ConnectionException_Exception
     * @throws UnauthorizedException_Exception
     */
    @WebMethod(operationName = "GetUser")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "GetUser", targetNamespace = "http://Server.GamesNetworkSoap.ws/", className = "ws.gamesnetworksoap.server.GetUser")
    @ResponseWrapper(localName = "GetUserResponse", targetNamespace = "http://Server.GamesNetworkSoap.ws/", className = "ws.gamesnetworksoap.server.GetUserResponse")
    @Action(input = "http://Server.GamesNetworkSoap.ws/IGamesNetwork/GetUserRequest", output = "http://Server.GamesNetworkSoap.ws/IGamesNetwork/GetUserResponse", fault = {
        @FaultAction(className = ConnectionException_Exception.class, value = "http://Server.GamesNetworkSoap.ws/IGamesNetwork/GetUser/Fault/ConnectionException"),
        @FaultAction(className = UnauthorizedException_Exception.class, value = "http://Server.GamesNetworkSoap.ws/IGamesNetwork/GetUser/Fault/UnauthorizedException"),
        @FaultAction(className = InternalErrorException_Exception.class, value = "http://Server.GamesNetworkSoap.ws/IGamesNetwork/GetUser/Fault/InternalErrorException")
    })
    public Usermodel getUser(
        @WebParam(name = "arg0", targetNamespace = "")
        Usermodel arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        String arg1)
        throws ConnectionException_Exception, InternalErrorException_Exception, UnauthorizedException_Exception
    ;

    /**
     * 
     * @param arg1
     * @param arg0
     * @return
     *     returns java.lang.String
     * @throws InternalErrorException_Exception
     * @throws UnauthorizedException_Exception
     * @throws ConnectionException_Exception
     */
    @WebMethod(operationName = "Loggin")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "Loggin", targetNamespace = "http://Server.GamesNetworkSoap.ws/", className = "ws.gamesnetworksoap.server.Loggin")
    @ResponseWrapper(localName = "LogginResponse", targetNamespace = "http://Server.GamesNetworkSoap.ws/", className = "ws.gamesnetworksoap.server.LogginResponse")
    @Action(input = "http://Server.GamesNetworkSoap.ws/IGamesNetwork/LogginRequest", output = "http://Server.GamesNetworkSoap.ws/IGamesNetwork/LogginResponse", fault = {
        @FaultAction(className = UnauthorizedException_Exception.class, value = "http://Server.GamesNetworkSoap.ws/IGamesNetwork/Loggin/Fault/UnauthorizedException"),
        @FaultAction(className = ConnectionException_Exception.class, value = "http://Server.GamesNetworkSoap.ws/IGamesNetwork/Loggin/Fault/ConnectionException"),
        @FaultAction(className = InternalErrorException_Exception.class, value = "http://Server.GamesNetworkSoap.ws/IGamesNetwork/Loggin/Fault/InternalErrorException")
    })
    public String loggin(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        String arg1)
        throws ConnectionException_Exception, InternalErrorException_Exception, UnauthorizedException_Exception
    ;

    /**
     * 
     * @param arg0
     * @return
     *     returns boolean
     * @throws InternalErrorException_Exception
     * @throws UnauthorizedException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "isAuthenticated", targetNamespace = "http://Server.GamesNetworkSoap.ws/", className = "ws.gamesnetworksoap.server.IsAuthenticated")
    @ResponseWrapper(localName = "isAuthenticatedResponse", targetNamespace = "http://Server.GamesNetworkSoap.ws/", className = "ws.gamesnetworksoap.server.IsAuthenticatedResponse")
    @Action(input = "http://Server.GamesNetworkSoap.ws/IGamesNetwork/isAuthenticatedRequest", output = "http://Server.GamesNetworkSoap.ws/IGamesNetwork/isAuthenticatedResponse", fault = {
        @FaultAction(className = UnauthorizedException_Exception.class, value = "http://Server.GamesNetworkSoap.ws/IGamesNetwork/isAuthenticated/Fault/UnauthorizedException"),
        @FaultAction(className = InternalErrorException_Exception.class, value = "http://Server.GamesNetworkSoap.ws/IGamesNetwork/isAuthenticated/Fault/InternalErrorException")
    })
    public boolean isAuthenticated(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0)
        throws InternalErrorException_Exception, UnauthorizedException_Exception
    ;

    /**
     * 
     * @param arg0
     * @throws InternalErrorException_Exception
     * @throws UnauthorizedException_Exception
     */
    @WebMethod(operationName = "Logout")
    @RequestWrapper(localName = "Logout", targetNamespace = "http://Server.GamesNetworkSoap.ws/", className = "ws.gamesnetworksoap.server.Logout")
    @ResponseWrapper(localName = "LogoutResponse", targetNamespace = "http://Server.GamesNetworkSoap.ws/", className = "ws.gamesnetworksoap.server.LogoutResponse")
    @Action(input = "http://Server.GamesNetworkSoap.ws/IGamesNetwork/LogoutRequest", output = "http://Server.GamesNetworkSoap.ws/IGamesNetwork/LogoutResponse", fault = {
        @FaultAction(className = InternalErrorException_Exception.class, value = "http://Server.GamesNetworkSoap.ws/IGamesNetwork/Logout/Fault/InternalErrorException"),
        @FaultAction(className = UnauthorizedException_Exception.class, value = "http://Server.GamesNetworkSoap.ws/IGamesNetwork/Logout/Fault/UnauthorizedException")
    })
    public void logout(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0)
        throws InternalErrorException_Exception, UnauthorizedException_Exception
    ;

    /**
     * 
     * @param arg0
     * @return
     *     returns java.util.List<ws.gamesnetworksoap.server.Usermodel>
     * @throws InternalErrorException_Exception
     * @throws UnauthorizedException_Exception
     * @throws ConnectionException_Exception
     */
    @WebMethod(operationName = "GetUsers")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "GetUsers", targetNamespace = "http://Server.GamesNetworkSoap.ws/", className = "ws.gamesnetworksoap.server.GetUsers")
    @ResponseWrapper(localName = "GetUsersResponse", targetNamespace = "http://Server.GamesNetworkSoap.ws/", className = "ws.gamesnetworksoap.server.GetUsersResponse")
    @Action(input = "http://Server.GamesNetworkSoap.ws/IGamesNetwork/GetUsersRequest", output = "http://Server.GamesNetworkSoap.ws/IGamesNetwork/GetUsersResponse", fault = {
        @FaultAction(className = UnauthorizedException_Exception.class, value = "http://Server.GamesNetworkSoap.ws/IGamesNetwork/GetUsers/Fault/UnauthorizedException"),
        @FaultAction(className = InternalErrorException_Exception.class, value = "http://Server.GamesNetworkSoap.ws/IGamesNetwork/GetUsers/Fault/InternalErrorException"),
        @FaultAction(className = ConnectionException_Exception.class, value = "http://Server.GamesNetworkSoap.ws/IGamesNetwork/GetUsers/Fault/ConnectionException")
    })
    public List<Usermodel> getUsers(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0)
        throws ConnectionException_Exception, InternalErrorException_Exception, UnauthorizedException_Exception
    ;

    /**
     * 
     * @param arg1
     * @param arg0
     * @return
     *     returns double
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "add", targetNamespace = "http://Server.GamesNetworkSoap.ws/", className = "ws.gamesnetworksoap.server.Add")
    @ResponseWrapper(localName = "addResponse", targetNamespace = "http://Server.GamesNetworkSoap.ws/", className = "ws.gamesnetworksoap.server.AddResponse")
    @Action(input = "http://Server.GamesNetworkSoap.ws/IGamesNetwork/addRequest", output = "http://Server.GamesNetworkSoap.ws/IGamesNetwork/addResponse")
    public double add(
        @WebParam(name = "arg0", targetNamespace = "")
        double arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        double arg1);

}
